name: release-nightly
on:
  schedule:
    - cron: '0 0 * * *'
jobs:
  testing:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node: [10.x, 12.x]
    name: Run tests
    steps:
      - uses: actions/checkout@v1
      - uses: bahmutov/npm-install@v1.1.0
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - id: Install Rust
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable
          export PATH="$HOME/.cargo/bin:$PATH"
          echo "##vso[task.setvariable variable=PATH]$PATH"
          rustc -Vv
          cargo -V
      - id: Install Rust
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          curl -sSf -o rustup-init.exe https://win.rustup.rs
          rustup-init.exe -y --default-toolchain stable --default-host x86_64-pc-windows-msvc
          set PATH=%PATH%;%USERPROFILE%\.cargo\bin
          echo "##vso[task.setvariable variable=PATH]%PATH%;%USERPROFILE%\.cargo\bin"
          rustc -Vv
          cargo -V
      - id: Bump max inotify watches
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p;
      - id: ESLint & Prettier
        run: yarn lint
      - id: Unit Tests
        run: yarn test:unit
      - id: Integration Tests
        run: yarn test:integration-ci
      - id: Flow TypeChecking
        run: yarn flow check
